"""
Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят, и сколько между ними находится букв.
"""
print('*'*10 + '\n'+"Atention!\nЕсли Вы используете русский алфавит, буква е и ё будет считаться как одна буква, и обозначаться - 'е'.\n\
Данная программа подерживает только rus и eng языки в нижнем регистре.\nНедопустимо использование букв с разных языков.\nAtention!\n"+'*'*10)
first_letter = ord(input("Введите первую букву: ")) # функция ord() позволяет перевести ввод пользователя в систему ascii или utf-8, иначе говоря получить код под которым закодированна буква или знак
second_letter = ord(input("Введите вторую букву: "))

if 97 <= first_letter <= 122 and 97 <= second_letter <= 122: # простой проверкой ord('a') ord('z') легко выяснить диапазон возможных значений, заодно проверяем, что б буквы принадлежали одному алфавиту
    print(f"""'{chr(first_letter)}' - на {first_letter - 96} позиции в алфавите,
'{chr(second_letter)}' - на {second_letter - 96} позиции в алфавите,
между ними {abs(second_letter - first_letter - 1 )} букв(ы)(а).""")# функция chr() пытается перевести значение в символ согласно таблице кодировки (ascii. utf-8, latin-1)
# функция abs() аналогия модулю, на случай если укажут буквы в обратном порядке

elif 1072 <= first_letter <= 1103 and 1072 <= second_letter <= 1103:
    print(f"""'{chr(first_letter)}' - на {first_letter - 1071} позиции в алфавите,
'{chr(second_letter)}' - на {second_letter - 1071} позиции в алфавите,
между ними {abs(second_letter - first_letter - 1 )} букв(ы)(а).""")

else: print("Недопустимые значения")

